name: Schema Linting

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
      - main
    paths:
      - '.github/workflows/schema-linter.yml'
      - '**.php'
      - 'bin/**'
      - 'composer.json'
      - 'composer.lock'

# Cancel previous workflow run groups that have not completed.
concurrency:
  # Group workflow runs by workflow name, along with the head branch ref of the pull request
  # or otherwise the branch or tag ref.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    name: Lint WPGraphQL Schema

    services:
      mysql:
        image: mariadb:10
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
        # Ensure docker waits for mariadb to start
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP w/ Composer & WP-CLI
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, bcmath, exif, gd, mysqli, opcache, zip, pdo_mysql
          coverage: none
          tools: composer:v2, wp-cli

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup GraphQL Schema Linter
        run: npm install -g graphql-schema-linter@^3.0 graphql@^16

      - name: Setup WordPress
        run: |
          cp .env.dist .env
          # Append to the .env file
          echo "INCLUDE_EXTENSIONS=${{ env.INCLUDE_EXTENSIONS }}" >> .env
          composer run install-test-env
        env:
          INCLUDE_EXTENSIONS: ''

      - name: Generate the Static Schema
        run: |
          cd /tmp/wordpress
          # Output: /tmp/schema.graphql
          wp graphql generate-static-schema

      - name: Lint the Static Schema
        run: |
          graphql-schema-linter --except=relay-connection-types-spec,relay-page-info-spec --ignore '{"defined-types-are-used":["MenuItemsWhereArgs","PostObjectUnion","TermObjectUnion","TimezoneEnum"]}' /tmp/schema.graphql

      - name: Display ignored linting errors
        run: |
          graphql-schema-linter /tmp/schema.graphql || true

      - name: Get Latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Test Schema for breaking changes
        run: |
          echo "Previous tagged schema ${{ steps.get-latest-tag.outputs.tag }}"

      - name: Get Previous Released Schema
        run: curl 'https://github.com/AxeWP/wp-graphql-headless-login/releases/download/${{ steps.get-latest-tag.outputs.tag }}/schema.graphql' -L  --output /tmp/${{ steps.get-latest-tag.outputs.tag }}.graphql

      # https://github.com/marketplace/actions/graphql-inspector
      - name: Install Schema Inspector
        run: |
          npm install @graphql-inspector/config @graphql-inspector/cli graphql

      - name: Run Schema Inspector
        run: |
          # This schema and previous release schema
          node_modules/.bin/graphql-inspector diff /tmp/${{ steps.get-latest-tag.outputs.tag }}.graphql /tmp/schema.graphql
